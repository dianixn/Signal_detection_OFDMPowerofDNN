function [LSTM_Trained, Training_Info] = Train_LSTM_64(XTrain, YTrain, XValidation, YValidation, Training_Set_Rate)

% Set up layers
LSTM_Layers = [ ...
    sequenceInputLayer(256,"Name","sequence")
    lstmLayer(64,'OutputMode','last')
    fullyConnectedLayer(16)
    softmaxLayer("Name","softmax")
    classificationLayer('Name','classification')];

% Option settings
ValidationFrequency = ceil(1 / (1 - Training_Set_Rate));

Options = trainingOptions('adam', ...
    'MaxEpochs',15, ...
    'MiniBatchSize',10, ...
    'InitialLearnRate',2e-3, ...
    'LearnRateSchedule','piecewise', ...
    'LearnRateDropFactor',0.3, ...
    'LearnRateDropPeriod',4, ...
    'ValidationData',{XValidation,YValidation}, ...
    'ValidationFrequency',ValidationFrequency, ...
    'Shuffle','every-epoch', ...
    'Verbose',1, ...
    'L2Regularization',0.005, ...
    'Plots','training-progress');

% Train Network
[LSTM_Trained, Training_Info] = trainNetwork(XTrain, YTrain, LSTM_Layers, Options);
%save('LSTM_64_Trained.mat','LSTM_Trained');
end
